{"version":3,"sources":["modules/Login/index.jsx","utils.js","modules/Dashboard/UserForDraw.jsx","modules/Dashboard/Admin.jsx","modules/Dashboard/GiftedReceiver.jsx","modules/Dashboard/LoggedUser.jsx","modules/Dashboard/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["LoginPage","setLogged","setPage","useState","name","setName","password","setPassword","login","a","fetch","process","method","headers","body","JSON","stringify","username","res","json","user","status","pages","DASHBOARD","console","log","className","TextField","label","required","placeholder","variant","value","onChange","e","target","Button","color","onClick","UserForDraw","toExclude","setUsers","users","usersToExclude","setUsersToExclude","handleChange","event","prev","current","findIndex","u","Select","multiple","input","Input","fullWidth","filter","map","MenuItem","id","pUser","size","Admin","logged","room","newUser","setNewUser","addUser","role","roomId","handleDraw","allIds","usersAfterDraw","giftReceiver","forEach","whoCanGetUser","userToCheck","IdsToExclude","inAllId","includes","canGiveUser","Math","random","reverse","find","can","undefined","userToExclude","userWithoutExcluded","finallySearch","z","updateAdmin","toFind","Promise","all","GiftedReceiver","receiver","setReceiver","getDesire","giftReceiverName","useEffect","desire","LoggedUser","setDesire","handleSendDesire","DashboardPage","LOGIN","App","page","switchPages","useCallback","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.da839ab0.chunk.js","sourcesContent":["import { Button, TextField } from '@material-ui/core';\r\nimport { useState } from 'react';\r\nimport { pages } from '../../App';\r\nimport { getContext } from '../../utils';\r\nimport './index.css';\r\nconst LoginPage = ({ setLogged, setPage }) => {\r\n  const [name, setName] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const login = async () => {\r\n    if (name && password) {\r\n      try {\r\n        const res = await fetch(`${getContext()}/user/login`, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Access-Control-Allow-Origin':'*',\r\n            'Access-Control-Allow-Headers': '*',\r\n            'Access-Control-Allow-Credentials': 'true',\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({\r\n            username: name,\r\n            password,\r\n          }),\r\n        });\r\n        const user = await res.json();\r\n        if (res.status === 200 && user) {\r\n          setLogged(user);\r\n          setPage(pages.DASHBOARD);\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className='Form'>\r\n      <div className='Form__inputs'>\r\n        <TextField\r\n          label='imię'\r\n          required\r\n          placeholder='imię'\r\n          variant='outlined'\r\n          value={name}\r\n          onChange={(e) => {\r\n            setName(e.target.value);\r\n          }}\r\n        />\r\n        <TextField\r\n          label='hasło'\r\n          required\r\n          placeholder='hasło'\r\n          variant='outlined'\r\n          value={password}\r\n          onChange={(e) => {\r\n            setPassword(e.target.value);\r\n          }}\r\n        />\r\n      </div>\r\n      <div>\r\n        <Button color='primary' onClick={login} variant='outlined'>\r\n          Zaloguj\r\n        </Button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","export const getContext = () => process.env.REACT_APP_BACKEND_URL","import { Button, Input, MenuItem, Select } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\n\r\nexport const UserForDraw = ({\r\n  user: { username, toExclude },\r\n  setUsers,\r\n  users,\r\n}) => {\r\n  const handleDeleteUser = () => {\r\n    setUsers((prev) => prev.filter((pUser) => pUser.username !== username));\r\n  };\r\n  const [usersToExclude, setUsersToExclude] = useState(toExclude || []);\r\n\r\n  const handleChange = async (event) => {\r\n    setUsersToExclude(event.target.value);\r\n    setUsers((prev) => {\r\n      const current = prev.findIndex((u) => u.username === username);\r\n      prev[current].toExclude = event.target.value;\r\n      return prev;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className='Admin__User'>\r\n      <p>{username}</p>\r\n      <div className='Admin__exclude'>\r\n        <p>Wyklucz:</p>\r\n        <div className='Admin__exclude__select'>\r\n          <Select\r\n            multiple\r\n            value={usersToExclude}\r\n            onChange={handleChange}\r\n            variant='outlined'\r\n            input={<Input />}\r\n            fullWidth\r\n          >\r\n            {users\r\n              .filter((u) => u.username !== username)\r\n              .map((u) => (\r\n                <MenuItem key={u.id} value={u.id}>\r\n                  {u.username}\r\n                </MenuItem>\r\n              ))}\r\n          </Select>\r\n        </div>\r\n      </div>\r\n      <Button\r\n        color='primary'\r\n        onClick={handleDeleteUser}\r\n        variant='outlined'\r\n        size='small'\r\n      >\r\n        Usuń\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n","import { Button, TextField } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport { getContext } from '../../utils';\r\nimport { UserForDraw } from './UserForDraw';\r\n\r\nexport const Admin = ({ logged, setLogged }) => {\r\n  const [users, setUsers] = useState(logged.room.users);\r\n  const [newUser, setNewUser] = useState('');\r\n\r\n  const addUser = async () => {\r\n    try {\r\n      const res = await fetch(`${getContext()}/user/register`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          username: newUser,\r\n          role: 'NORMAL',\r\n          roomId: logged.room.id,\r\n        }),\r\n      });\r\n      const user = await res.json();\r\n      if (user) {\r\n        setUsers((prev) => [...prev, user]);\r\n        setNewUser('');\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const handleDraw = async () => {\r\n    let allIds = users.map(({ id }) => id);\r\n    const usersAfterDraw = users.map((user) => {\r\n      delete user.giftReceiver;\r\n      return user;\r\n    });\r\n    users.forEach((user) => {\r\n      const whoCanGetUser = usersAfterDraw.filter((userToCheck) => {\r\n        const IdsToExclude = userToCheck.toExclude\r\n          ? [...userToCheck.toExclude, userToCheck.id]\r\n          : [userToCheck.id];\r\n        const withoutExcluded = allIds.filter(\r\n          (inAllId) => !IdsToExclude.includes(inAllId)\r\n        );\r\n        return withoutExcluded.includes(user.id);\r\n      });\r\n      const reversed = Math.random() > 0.5;\r\n      let canGiveUser = reversed\r\n        ? whoCanGetUser.reverse().find((can) => can.giftReceiver === undefined)\r\n        : whoCanGetUser.find((can) => can.giftReceiver === undefined);\r\n      if (!canGiveUser) {\r\n        const userToExclude = user.toExclude\r\n          ? [...user.toExclude, user.id]\r\n          : [user.id];\r\n\r\n        const userWithoutExcluded = allIds.filter(\r\n          (inAllId) => !userToExclude.includes(inAllId)\r\n        );\r\n        const finallySearch = whoCanGetUser.find((z) =>\r\n          userWithoutExcluded.includes(z.giftReceiver)\r\n        );\r\n        user.giftReceiver = finallySearch.giftReceiver;\r\n        canGiveUser = finallySearch;\r\n      }\r\n      canGiveUser.giftReceiver = user.id;\r\n    });\r\n    const updateAdmin = {\r\n      ...logged,\r\n      giftReceiver: usersAfterDraw.find((toFind) => toFind.id === logged.id)\r\n        .giftReceiver,\r\n    };\r\n    setLogged(updateAdmin);\r\n    await Promise.all(\r\n      usersAfterDraw.map((user) => {\r\n        fetch(`${getContext()}/user/${user.id}/update`, {\r\n          method: 'PATCH',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({\r\n            ...user,\r\n            room: logged.room,\r\n          }),\r\n        });\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <p>\r\n          <strong>Losowani:</strong>\r\n        </p>\r\n        <div className='Admin__add__user'>\r\n          <TextField\r\n            label='Imię'\r\n            required\r\n            variant='outlined'\r\n            value={newUser}\r\n            onChange={(e) => {\r\n              setNewUser(e.target.value);\r\n            }}\r\n            size='small'\r\n          />\r\n          <Button\r\n            color='primary'\r\n            onClick={addUser}\r\n            variant='outlined'\r\n            size='small'\r\n          >\r\n            Dodaj\r\n          </Button>\r\n        </div>\r\n        <div className='Admin__users'>\r\n          {users.map((user) => (\r\n            <UserForDraw\r\n              user={user}\r\n              setUsers={setUsers}\r\n              users={users}\r\n              key={user.username}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <Button color='primary' onClick={handleDraw} variant='outlined'>\r\n        Losuj\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { getContext } from '../../utils';\r\n\r\nexport const GiftedReceiver = ({ logged: { giftReceiver } }) => {\r\n  const [receiver, setReceiver] = useState(null);\r\n\r\n  const getDesire = async (giftReceiverName) => {\r\n    try {\r\n      const res = await fetch(`${getContext()}/user/${giftReceiverName}`);\r\n      const giftReceiver = await res.json();\r\n      setReceiver(giftReceiver);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (giftReceiver) {\r\n      getDesire(giftReceiver);\r\n    }\r\n  }, [giftReceiver]);\r\n\r\n  return (\r\n    receiver && (\r\n      <div className='Logged__gift__receiver'>\r\n        <div>\r\n          <strong>Wylosowano:</strong> {receiver.username}\r\n        </div>\r\n        <div>\r\n          <strong>Czego pragnie:</strong> {receiver.desire}\r\n        </div>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n","import { Button, TextField } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport { getContext } from '../../utils';\r\nimport './index.css'\r\nexport const LoggedUser = ({ logged ,setLogged}) => {\r\n  const [desire, setDesire] = useState(logged.desire);\r\n  const handleSendDesire = async () => {\r\n   try {\r\n     const res = await fetch(`${getContext()}/user/${logged.id}/update`, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        ...logged,\r\n        desire\r\n      }),\r\n    })\r\n    const user = await res.json();\r\n    if(user) {\r\n      setDesire(user.desire)\r\n      setLogged(user)\r\n    }\r\n   } catch (error) {\r\n     console.log(error)\r\n   }\r\n  };\r\n  return (\r\n    <div >\r\n      <p>Zalogowany: {logged.username}</p>\r\n      <div className=\"Logged__desire\">\r\n        Co byś chciał?\r\n        <TextField\r\n          label='prezent'\r\n          required\r\n          variant='outlined'\r\n          value={desire}\r\n          onChange={(e) => {\r\n            setDesire(e.target.value);\r\n          }}\r\n          size=\"small\"\r\n        />\r\n        <Button color='primary' onClick={handleSendDesire} variant='outlined' size=\"small\">\r\n          Wyślij\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { Button } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { pages } from '../../App';\r\nimport { Admin } from './Admin';\r\nimport { GiftedReceiver } from './GiftedReceiver';\r\nimport { LoggedUser } from './LoggedUser';\r\nimport './index.css';\r\nconst DashboardPage = ({ logged, setLogged, setPage }) => {\r\n  const handleLogout = () => {\r\n    setLogged(null);\r\n    setPage(pages.LOGIN);\r\n  };\r\n\r\n  return (\r\n    <div className='Logged__container'>\r\n       <div>\r\n        <Button color='primary' onClick={handleLogout} variant='outlined'>\r\n          Wyloguj\r\n        </Button>\r\n      </div>\r\n      <LoggedUser logged={logged} setLogged={setLogged}/>\r\n      {logged.role === 'ADMIN' && <Admin logged={logged}  setLogged={setLogged}/>}\r\n      <GiftedReceiver logged={logged}/>\r\n     \r\n    </div>\r\n  );\r\n};\r\nexport default DashboardPage;\r\n","import { useState, useCallback } from 'react';\r\nimport './App.css';\r\nimport LoginPage from './modules/Login';\r\nimport DashboardPage from './modules/Dashboard';\r\n\r\nexport const pages = {\r\n  LOGIN: 'login',\r\n  DASHBOARD: 'dashboard',\r\n};\r\n\r\nfunction App() {\r\n  const [page, setPage] = useState(pages.LOGIN);\r\n  const [logged, setLogged] = useState('');\r\n\r\n  const switchPages = useCallback(() => {\r\n    switch (page) {\r\n      case pages.LOGIN: {\r\n        return <LoginPage setLogged={setLogged} setPage={setPage} />;\r\n      }\r\n      case pages.DASHBOARD: {\r\n        return (\r\n          <DashboardPage\r\n            setPage={setPage}\r\n            setLogged={setLogged}\r\n            logged={logged}\r\n          />\r\n        );\r\n      }\r\n      default:\r\n        return null;\r\n    }\r\n  }, [page]);\r\n  return <div className='Container'>{switchPages()}</div>;\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}